scalar Date

type Author {
    id: ID!
    name: String!
    biography: String!
    bornDate: Date!
    books: [Book!]
}

type Book {
    id: ID!
    title: String!
    description: String!
    publishedDate: Date!
    authors: [Author!]
}

type BookPage {
    books: [Book!]
    totalPage: Int
    currentPage: Int
}

type AuthorPage {
    authors: [Author!]
    totalPage: Int
    currentPage: Int
}

type Query {
    sayHello: String
    getBooks(filter: String, page: Int, limit: Int): BookPage
    getBookById(id: ID!): Book
    getAuthors(filter: String, page: Int, limit: Int): AuthorPage
    getAuthorById(id: ID!): Author
}

type Mutation {
    createBook(title: String!, description: String!, publishedDate: Date!, authorIds: [ID!]): Book
    updateBook(id: ID!, title: String, description: String, publishedDate: Date, authorIds: [ID!]): Book
    deleteBook(id: ID!): Book
    createAuthor(name: String!, biography: String!, bornDate: Date!): Author
    updateAuthor(id: ID!, name: String, biography: String, bornDate: Date): Author
    deleteAuthor(id: ID!): Author
    addAuthorToBook(bookId: ID!, authorId: ID!): Book
}
